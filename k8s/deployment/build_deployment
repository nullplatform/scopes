#!/bin/bash

echo "TEMPLATE DIR: $OUTPUT_DIR, ACTION: $ACTION, DRY_RUN: $DRY_RUN"

APPLIED_FILES=()

# Find all .yaml files that were not yet applied / deleted
while IFS= read -r TEMPLATE_FILE; do
   echo "kubectl $ACTION $TEMPLATE_FILE"

   if [[ "$DRY_RUN" == "false" ]]; then
     kubectl "$ACTION" -f "$TEMPLATE_FILE"
   fi

   BASE_DIR="$(dirname "$TEMPLATE_FILE")"
   FILENAME="$(basename "$TEMPLATE_FILE")"
   DEST_DIR="${BASE_DIR}/$ACTION"

   mkdir -p "$DEST_DIR"

   mv "$TEMPLATE_FILE" "$DEST_DIR/$FILENAME"

   # Add the moved file path to our array
   APPLIED_FILES+=("$DEST_DIR/$FILENAME")
done < <(find "$OUTPUT_DIR" \( -path "*/apply" -o -path "*/delete" \) -prune -o -type f -name "*.yaml" -print)

if [[ "$DRY_RUN" == "true" ]]; then
  exit 1
fi

IAM=${IAM-"{}"}

IAM_ENABLED=$(echo "$IAM" | jq -r .ENABLED)

SERVICE_ACCOUNT_NAME=""

if [[ "$IAM_ENABLED" == "true" ]]; then
  SERVICE_ACCOUNT_NAME=$(echo "$IAM" | jq -r .PREFIX)-"$SCOPE_ID"
fi

DEPLOYMENT_PATH="$OUTPUT_DIR/deployment-$SCOPE_ID-$DEPLOYMENT_ID.yaml"
SECRET_PATH="$OUTPUT_DIR/secret-$SCOPE_ID-$DEPLOYMENT_ID.yaml"
SCALING_PATH="$OUTPUT_DIR/scaling-$SCOPE_ID-$DEPLOYMENT_ID.yaml"
SERVICE_TEMPLATE_PATH="$OUTPUT_DIR/service-$SCOPE_ID-$DEPLOYMENT_ID.yaml"
PDB_PATH="$OUTPUT_DIR/pdb-$SCOPE_ID-$DEPLOYMENT_ID.yaml"
CONTEXT_PATH="$OUTPUT_DIR/context-$SCOPE_ID.json"

echo "$CONTEXT" | jq --arg replicas "$REPLICAS" --arg service_account_name "$SERVICE_ACCOUNT_NAME" '. + {replicas: $replicas, service_account_name: $service_account_name}' > "$CONTEXT_PATH"

echo "Building Template: $DEPLOYMENT_TEMPLATE to $DEPLOYMENT_PATH"

gomplate -c .="$CONTEXT_PATH" \
  --file "$DEPLOYMENT_TEMPLATE" \
  --out "$DEPLOYMENT_PATH"

TEMPLATE_GENERATION_STATUS=$?

if [[ $TEMPLATE_GENERATION_STATUS -ne 0 ]]; then
    echo "Error building deployment template"
    exit 1
fi

echo "Building Template: $SECRET_TEMPLATE to $SECRET_PATH"

gomplate -c .="$CONTEXT_PATH" \
  --file "$SECRET_TEMPLATE" \
  --out "$SECRET_PATH"

TEMPLATE_GENERATION_STATUS=$?

if [[ $TEMPLATE_GENERATION_STATUS -ne 0 ]]; then
    echo "Error building secret template"
    exit 1
fi

echo "Building Template: $SCALING_TEMPLATE to $SCALING_PATH"

gomplate -c .="$CONTEXT_PATH" \
  --file "$SCALING_TEMPLATE" \
  --out "$SCALING_PATH"

TEMPLATE_GENERATION_STATUS=$?

if [[ $TEMPLATE_GENERATION_STATUS -ne 0 ]]; then
    echo "Error building scaling template"
    exit 1
fi

echo "Building Template: $SERVICE_TEMPLATE to $SERVICE_TEMPLATE_PATH"

gomplate -c .="$CONTEXT_PATH" \
  --file "$SERVICE_TEMPLATE" \
  --out "$SERVICE_TEMPLATE_PATH"

TEMPLATE_GENERATION_STATUS=$?

if [[ $TEMPLATE_GENERATION_STATUS -ne 0 ]]; then
    echo "Error building service template"
    exit 1
fi

echo "Building Template: $PDB_TEMPLATE to $PDB_PATH"

gomplate -c .="$CONTEXT_PATH" \
  --file "$PDB_TEMPLATE" \
  --out "$PDB_PATH"

TEMPLATE_GENERATION_STATUS=$?

if [[ $TEMPLATE_GENERATION_STATUS -ne 0 ]]; then
    echo "Error building PDB template"
    exit 1
fi

rm "$CONTEXT_PATH"
