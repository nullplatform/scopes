#!/bin/bash

# Script to read the last 100KB of logs from a Kubernetes pod (including crashed/dead pods)
# Usage: ./diagnose_pod_logs <pod_name> [namespace]

if [ $# -eq 0 ]; then
    echo "Usage: $0 <pod_name> [namespace]"
    echo "Example: $0 my-app-pod-123"
    echo "Example: $0 my-app-pod-123 my-namespace"
    exit 1
fi

POD_NAME="$1"
NAMESPACE="${2:-default}"

echo "Reading last 100KB of logs from pod: $POD_NAME in namespace: $NAMESPACE"
echo "======================================================================"

# Check if pod exists
if ! kubectl get pod "$POD_NAME" -n "$NAMESPACE" >/dev/null 2>&1; then
    echo "Error: Pod '$POD_NAME' not found in namespace '$NAMESPACE'"
    exit 1
fi

# Get pod info
echo ""
echo "POD INFO:"
echo "========="

# Get pod status
POD_STATUS=$(kubectl get pod "$POD_NAME" -n "$NAMESPACE" -o jsonpath='{.status.phase}' 2>/dev/null)
RESTART_COUNT=$(kubectl get pod "$POD_NAME" -n "$NAMESPACE" -o jsonpath='{.status.containerStatuses[0].restartCount}' 2>/dev/null)

echo "RESTART COUNT: $RESTART_COUNT"

# Check if pod has multiple containers
CONTAINERS=$(kubectl get pod "$POD_NAME" -n "$NAMESPACE" -o jsonpath='{.spec.containers[*].name}' 2>/dev/null)
CONTAINER_COUNT=$(echo $CONTAINERS | wc -w)

echo ""
echo "CONTAINERS IN POD:"
echo "=================="
echo "Container count: $CONTAINER_COUNT"
echo "Container names: $CONTAINERS"

# Get logs for each container
for CONTAINER in $CONTAINERS; do
    echo ""
    echo "CURRENT LOGS FROM CONTAINER: $CONTAINER"
    echo "======================================="
    
    # Try to get current logs first
    kubectl logs "$POD_NAME" -n "$NAMESPACE" -c "$CONTAINER" --limit-bytes=102400 2>/dev/null || {
        echo "No current logs available for container '$CONTAINER'"
    }
    
    # Always try to get previous logs for crashed/restarted containers
    echo ""
    echo "PREVIOUS LOGS FROM CONTAINER: $CONTAINER (for crashed/restarted pods)"
    echo "===================================================================="
    
    kubectl logs "$POD_NAME" -n "$NAMESPACE" -c "$CONTAINER" --previous --limit-bytes=102400 2>/dev/null || {
        echo "No previous logs available for container '$CONTAINER'"
        echo "Trying previous logs without limit-bytes..."
        kubectl logs "$POD_NAME" -n "$NAMESPACE" -c "$CONTAINER" --previous --tail=100 2>/dev/null || {
            echo "No previous logs found for container '$CONTAINER'"
        }
    }
done

# Show container statuses to understand why pods failed
echo ""
echo "CONTAINER STATUSES:"
echo "=================="
kubectl get pod "$POD_NAME" -n "$NAMESPACE" -o jsonpath='{range .status.containerStatuses[*]}{.name}{": "}{.state}{"\n"}{end}' 2>/dev/null

echo ""
echo "EVENTS RELATED TO THIS POD:"
echo "==========================="
kubectl get events --field-selector involvedObject.name="$POD_NAME" -n "$NAMESPACE" --sort-by='.lastTimestamp' 2>/dev/null || {
    echo "No events found for pod '$POD_NAME'"
}
