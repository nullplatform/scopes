#!/bin/bash
POD_NAME=$1
NAMESPACE=$2
CONTAINERS=$(kubectl get pod "$POD_NAME" -n "$NAMESPACE" -o jsonpath='{.spec.containers[*].name}' 2>/dev/null)
CONTAINER_COUNT=$(echo $CONTAINERS | wc -w)

echo ""
echo "CONTAINERS IN POD:"
echo "=================="
echo "Container count: $CONTAINER_COUNT"
echo "Container names: $CONTAINERS"

# Get logs for each container
for CONTAINER in $CONTAINERS; do
    echo ""
    echo "CURRENT LOGS FROM CONTAINER: $CONTAINER"
    echo "======================================="
    
    # Try to get current logs first
    kubectl logs "$POD_NAME" -n "$NAMESPACE" -c "$CONTAINER" --limit-bytes=102400 2>/dev/null || {
        echo "No current logs available for container '$CONTAINER'"
    }
    
    # Always try to get previous logs for crashed/restarted containers
    echo ""
    echo "PREVIOUS LOGS FROM CONTAINER: $CONTAINER (for crashed/restarted pods)"
    echo "===================================================================="
    
    kubectl logs "$POD_NAME" -n "$NAMESPACE" -c "$CONTAINER" --previous --limit-bytes=102400 2>/dev/null || {
        echo "No previous logs available for container '$CONTAINER'"
        echo "Trying previous logs without limit-bytes..."
        kubectl logs "$POD_NAME" -n "$NAMESPACE" -c "$CONTAINER" --previous --tail=100 2>/dev/null || {
            echo "No previous logs found for container '$CONTAINER'"
        }
    }
done

# Show container statuses to understand why pods failed
echo ""
echo "CONTAINER STATUSES:"
echo "=================="
kubectl get pod "$POD_NAME" -n "$NAMESPACE" -o jsonpath='{range .status.containerStatuses[*]}{.name}{": "}{.state}{"\n"}{end}' 2>/dev/null

echo ""
echo "EVENTS RELATED TO THIS POD:"
echo "==========================="
kubectl get events --field-selector involvedObject.name="$POD_NAME" -n "$NAMESPACE" --sort-by='.lastTimestamp' 2>/dev/null || {
    echo "No events found for pod '$POD_NAME'"
}
