#!/bin/bash

IAM=${IAM-"{}"}

IAM_ENABLED=$(echo "$IAM" | jq -r .ENABLED)

if [[ "$IAM_ENABLED" == "false" || "$IAM_ENABLED" == "null" ]]; then
  return
fi

AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
SERVICE_ACCOUNT_NAME=$(echo "$IAM" | jq -r .PREFIX)-"$SCOPE_ID"
ROLE_ARN=$(aws iam get-role --role-name "$SERVICE_ACCOUNT_NAME" --query 'Role.Arn' --output text)

CONTEXT_PATH="$OUTPUT_DIR/context-$SCOPE_ID.json"
SERVICE_ACCOUNT_PATH="$OUTPUT_DIR/service_account-$SCOPE_ID.yaml"

echo "$CONTEXT" | jq --arg role_arn "$ROLE_ARN" --arg service_account_name "$SERVICE_ACCOUNT_NAME" '. + {role_arn: $role_arn, service_account_name: $service_account_name}' > "$CONTEXT_PATH"

echo "Building Template: $SERVICE_ACCOUNT_TEMPLATE to $SERVICE_ACCOUNT_PATH"
gomplate -c .="$CONTEXT_PATH" \
  --file "$SERVICE_ACCOUNT_TEMPLATE" \
  --out "$SERVICE_ACCOUNT_PATH"

TEMPLATE_GENERATION_STATUS=$?

if [[ $TEMPLATE_GENERATION_STATUS -ne 0 ]]; then
    echo "Error building secret template"
    exit 1
fi

rm "$CONTEXT_PATH"