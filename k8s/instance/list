#!/bin/bash

LABEL_SELECTOR="nullplatform=true"
if [[ -n "$APPLICATION_ID" && "$APPLICATION_ID" != "null" ]]; then
 LABEL_SELECTOR="$LABEL_SELECTOR,application_id=$APPLICATION_ID"
fi
if [[ -n "$SCOPE_ID" && "$SCOPE_ID" != "null" ]]; then
 LABEL_SELECTOR="$LABEL_SELECTOR,scope_id=$SCOPE_ID"
fi
if [[ -n "$DEPLOYMENT_ID" && "$DEPLOYMENT_ID" != "null" ]]; then
 LABEL_SELECTOR="$LABEL_SELECTOR,deployment_id=$DEPLOYMENT_ID"
fi

PODS=$(kubectl get pods -n "$K8S_NAMESPACE" -l "$LABEL_SELECTOR" -o json)

echo "$PODS" | jq --argjson limit ${LIMIT:-10} '{
 results: .items[:$limit] | map({
   id: .metadata.name,
   selector: .metadata.labels,
   details: {
     namespace: .metadata.namespace,
     ip: (.status.podIP // "pending"),
     dns: (if .status.podIP then "\(.status.podIP).\(.metadata.namespace).pod.cluster.local" else "pending" end),
     cpu: {
       requested: (if .spec.containers[0].resources.requests.cpu then (.spec.containers[0].resources.requests.cpu | gsub("m$"; "") | tonumber / 1000) else 0 end),
       limit: (if .spec.containers[0].resources.limits.cpu then (.spec.containers[0].resources.limits.cpu | gsub("m$"; "") | tonumber / 1000) else 0 end)
     },
     memory: {
       requested: (.spec.containers[0].resources.requests.memory // "0Mi"),
       limit: (.spec.containers[0].resources.limits.memory // "0Mi")
     },
     architecture: (.status.containerStatuses[0].image | if test("arm64|aarch64") then "arm64" else "x86" end)
   },
   state: .status.phase,
   launch_time: .metadata.creationTimestamp,
   spot: (.spec.nodeName // "" | test("spot"; "i"))
 })
}'